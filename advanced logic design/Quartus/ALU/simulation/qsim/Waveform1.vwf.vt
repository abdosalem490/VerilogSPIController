// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/16/2021 03:48:46"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ALU
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ALU_vlg_vec_tst();
// constants                                           
// general purpose registers
reg pin_name1;
reg pin_name2;
reg pin_name3;
reg pin_name4;
reg pin_name5;
reg pin_name6;
reg pin_name7;
reg pin_name8;
// wires                                               
wire pin_name9;
wire pin_name10;
wire pin_name11;
wire pin_name12;
wire pin_name13;

// assign statements (if any)                          
ALU i1 (
// port map - connection between master ports and signals/registers   
	.pin_name1(pin_name1),
	.pin_name2(pin_name2),
	.pin_name3(pin_name3),
	.pin_name4(pin_name4),
	.pin_name5(pin_name5),
	.pin_name6(pin_name6),
	.pin_name7(pin_name7),
	.pin_name8(pin_name8),
	.pin_name9(pin_name9),
	.pin_name10(pin_name10),
	.pin_name11(pin_name11),
	.pin_name12(pin_name12),
	.pin_name13(pin_name13)
);
initial 
begin 
#1000000 $finish;
end 

// pin_name1
initial
begin
	pin_name1 = 1'b0;
	pin_name1 = #160000 1'b1;
	pin_name1 = #20000 1'b0;
	pin_name1 = #290000 1'b1;
	pin_name1 = #20000 1'b0;
	pin_name1 = #290000 1'b1;
	pin_name1 = #50000 1'b0;
end 

// pin_name2
initial
begin
	pin_name2 = 1'b0;
	pin_name2 = #160000 1'b1;
	pin_name2 = #20000 1'b0;
	pin_name2 = #290000 1'b1;
	pin_name2 = #20000 1'b0;
	pin_name2 = #290000 1'b1;
	pin_name2 = #50000 1'b0;
	pin_name2 = #50000 1'b1;
	pin_name2 = #70000 1'b0;
end 

// pin_name3
initial
begin
	pin_name3 = 1'b0;
	pin_name3 = #160000 1'b1;
	pin_name3 = #20000 1'b0;
	pin_name3 = #140000 1'b1;
	pin_name3 = #60000 1'b0;
	pin_name3 = #90000 1'b1;
	pin_name3 = #20000 1'b0;
	pin_name3 = #290000 1'b1;
	pin_name3 = #50000 1'b0;
	pin_name3 = #50000 1'b1;
	pin_name3 = #70000 1'b0;
end 

// pin_name4
initial
begin
	pin_name4 = 1'b0;
	pin_name4 = #160000 1'b1;
	pin_name4 = #20000 1'b0;
	pin_name4 = #140000 1'b1;
	pin_name4 = #60000 1'b0;
	pin_name4 = #90000 1'b1;
	pin_name4 = #20000 1'b0;
	pin_name4 = #70000 1'b1;
	pin_name4 = #40000 1'b0;
	pin_name4 = #180000 1'b1;
	pin_name4 = #50000 1'b0;
	pin_name4 = #50000 1'b1;
	pin_name4 = #70000 1'b0;
end 

// pin_name5
initial
begin
	pin_name5 = 1'b0;
	pin_name5 = #160000 1'b1;
	pin_name5 = #20000 1'b0;
	pin_name5 = #140000 1'b1;
	pin_name5 = #60000 1'b0;
	pin_name5 = #90000 1'b1;
	pin_name5 = #20000 1'b0;
	pin_name5 = #70000 1'b1;
	pin_name5 = #40000 1'b0;
	pin_name5 = #80000 1'b1;
	pin_name5 = #40000 1'b0;
	pin_name5 = #60000 1'b1;
	pin_name5 = #50000 1'b0;
	pin_name5 = #50000 1'b1;
	pin_name5 = #70000 1'b0;
end 

// pin_name6
initial
begin
	pin_name6 = 1'b0;
	pin_name6 = #160000 1'b1;
	pin_name6 = #20000 1'b0;
	pin_name6 = #140000 1'b1;
	pin_name6 = #60000 1'b0;
	pin_name6 = #90000 1'b1;
	pin_name6 = #20000 1'b0;
	pin_name6 = #70000 1'b1;
	pin_name6 = #40000 1'b0;
	pin_name6 = #280000 1'b1;
	pin_name6 = #70000 1'b0;
end 

// pin_name7
initial
begin
	pin_name7 = 1'b0;
	pin_name7 = #160000 1'b1;
	pin_name7 = #20000 1'b0;
	pin_name7 = #140000 1'b1;
	pin_name7 = #60000 1'b0;
end 

// pin_name8
initial
begin
	pin_name8 = 1'b0;
	pin_name8 = #250000 1'b1;
	pin_name8 = #40000 1'b0;
end 
endmodule

